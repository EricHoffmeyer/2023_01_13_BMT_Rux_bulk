---
title: "2024_01_10_DESeq_comparisons"
format: html
editor: source
---

# Load Libraries

These libraries are required to perform this RNAseq analysis.

```{r}
suppressPackageStartupMessages({
library(EnsDb.Mmusculus.v79)
library(tidyverse)
library(tidybulk)
library(janitor)
library(plotly)
library(ggrepel)
library(DESeq2)
library(GeneTonic)
library(pcaExplorer)
library(AnnotationDbi)
library(org.Mm.eg.db)
library(topGO)
})
```


```{r}
folder.name <- "2024_01_10_results"

if(!exists(folder.name)){
  dir.create(folder.name)
}
```

# Data Dictionary - Metadata

Read in metadata and create a new column that matches with file folders. 
  Folder_name will help us read in the sample quant.sf files.

```{r}
assay.meta <- read.csv(file = "data/metadata/PLX037286_sample_data_eric_ARRANGED.csv") |>
  mutate(folder_name = str_remove(folder_name, pattern = "_R1_001.fastq.gz"))
public.meta <- read_tsv(file = "data/metadata/filereport_read_run_PRJNA448448_tsv_ARRANGED.txt") |> 
  as.data.frame()

combined_meta <- rbind(assay.meta, public.meta)
```

## Save/Load dataset

Load a copy of the Salmon dataset prepared in 

```{r}
load(file = "2023_11_09_results/sf.df.Rdata")
```

# Subsetting and initial count filtering

```{r}
subset.vector <- combined_meta |> 
  dplyr::filter(condition == "Mixed CD4 HLA B" | condition == "Reject CD4")

sf.df.data.df <-  sf.df |>
  dplyr::select(subset.vector$folder_name)

sf.df.data.df <- sf.df.data.df |> 
  mutate(row.sum = apply(sf.df.data.df, 1, function(x) sum(x > 10))) |> 
  # All values must be more than 10 (set to x if only x value is satisfied)
  dplyr::filter(row.sum == dim(subset.vector)[1]) |> 
  # No longer need the column "row.sum", we can remove it
  dplyr::select(-row.sum) |> 
  rownames_to_column(var = "gene_id")
```


# DESeq to GeneTonic

```{r}
subset.sf.df <- sf.df |> 
  dplyr::select(subset.vector$folder_name)

subset_meta <- combined_meta |> 
  filter(folder_name %in% subset.vector$folder_name)
```

```{r}
subset.salmon.matrix <- as.matrix(subset.sf.df)

subset.coldata <- data.frame(sample = subset_meta$folder_name,
                      condition = as.factor(subset_meta$condition),
                      row.names = "sample")
```

```{r}
all(rownames(subset.coldata) %in% colnames(subset.salmon.matrix))
```

```{r}
subset.se <- SummarizedExperiment(assays = list(counts = subset.salmon.matrix),
                           colData = subset.coldata)

subset.se
```

```{r}
subset.sf.df.dds = DESeqDataSet(subset.se, design = ~ condition)
```

Run DESeq.

```{r}
subset.sf.df.dds = DESeq(subset.sf.df.dds)

subset.res <- results(sf.df.dds,
                        contrast = c("condition", "Mixed CD4 HLA B", "Reject CD4"),
                        alpha = 0.05)
```

```{r}
subset.annotation <- deseqresult2df(subset.res) |> 
  dplyr::rename(gene_id = id) |> 
  mutate(gene_symbol = mapIds(org.Mm.eg.db, keys = gene_id, keytype = "ENSEMBL", column = "SYMBOL", multiVals = "first")) |> 
  mutate(gene_entrez = mapIds(org.Mm.eg.db, keys = gene_id, keytype = "ENSEMBL", column = "ENTREZID", multiVals = "first")) |> 
  mutate(gene_desc = mapIds(org.Mm.eg.db, keys = gene_id, keytype = "ENSEMBL", column = "GENENAME", multiVals = "first")) |> 
  relocate(gene_symbol, gene_entrez, gene_desc, .after = gene_id) |> 
  left_join(sf.df.data.df, by = c("gene_id"="gene_id")) 

subset.annotation.filtered <- subset.annotation |> 
  na.omit()

```











