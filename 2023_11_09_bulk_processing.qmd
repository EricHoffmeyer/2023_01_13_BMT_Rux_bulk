---
title: "2023_11_09_bulk_processing"
#format: html
editor: source
---

# Load Libraries

These libraries are required to perform this RNAseq analysis. Make sure you have install them before begin the analysis.

```{r}
suppressPackageStartupMessages({
library(tidyverse)
library(tidybulk)
library(janitor)
library(plotly)
library(ggrepel)
library(DESeq2)
library(GeneTonic)
library(pcaExplorer)
library(AnnotationDbi)
library(org.Hs.eg.db)
library(topGO)
})
```


# Data Dictionary - Metadata

Read in metadata and create a new column that matches with file folders

```{r}
meta <- read.csv(file = "data/metadata/PLX037286_sample_data_eric_ARRANGED.csv") |>
  mutate(folder_name = str_remove(r1_fastq, pattern = "_R1_001.fastq.gz"))
```

# Transcript-Gene-Pair: `tx2gene_df`

Our goal is to sum up all counts of a gene (represented by gene ID) from all its transcripts (represented by transcript ID). First, we will import gene's feature file (GTF) which contains gene id and transcipt id match.

```{r}
# Load this below
gtf <-  rtracklayer::import("XXXXX")

gtf_df <-  as.data.frame(gtf)

gtf_df
```

### Save `gtf`

```{r}
save(gtf_df, file = "data/mouse38_gtf_df.Rdata")
```

## Load the saved copy

```{r}
load(file = "data/mouse38_gtf_df.Rdata")
```

## Look up table

Create a look-up-table matching gene id to all its transcript ids:

```{r}
tx2gene_df <- gtf_df |>
  dplyr::select(transcript_id, gene_id) |>
	distinct(transcript_id, gene_id) |>
  drop_na() -> tx2gene_df

tx2gene_df

```

# Salmon loop

Predefine count table matrix by importing one of Salmon result to determine the number of genes for the table matrix.

```{r}
## Assesss how many genes in each sample?
tmp <-  read.delim(paste("data/raw_data/salmon_output_files", meta$folder_name[1], "quant.sf", sep = "/")) |>
  ## The Ensembl ID (Name) column has an extra period (.) and a digit
  ## Remove them from each entries:
  mutate(Name = str_sub(Name, end=-3)) |>
  ## Add gene id onto the table matching against transcript id:
  inner_join(tx2gene_df, by=c("Name"="transcript_id")) |>
  ## Sum up all the counts for each gene id from all its transcript ids
  group_by(gene_id) |>
  summarise(NumReads=as.integer(sum(NumReads)))
```

Now we can (pre)define the data matrix to hold all the samples, and start looping in all the samples from Salmon.

```{r}
sf.df <-  data.frame(matrix(0, nrow = length(tmp$gene_id), ncol = length(Data.dictionary$Orig.Name)))
colnames(sf.df) <-  meta$folder_name
rownames(sf.df) <-  tmp$gene_id

for(i in seq_along(meta$folder_name)){
  cat("Reading ", meta$folder_name[i], " Now ..............\n")

  sf.df[,i] = read.delim(paste("data/raw_data/salmon_output_files", meta$folder_name[i], "quant.sf", sep = "/")) |> 
    mutate(Name = str_sub(Name, end=-3)) |>
    inner_join(tx2gene_df, by=c("Name"="transcript_id")) |>
    group_by(gene_id) |>
    summarise(NumReads=as.integer(sum(NumReads))) |>
    pull(NumReads)
}
```

```{r}
sf.df
```

# Save dataset

Save a copy of the Salmon dataset so you don't have to reimport all the files everytimes:

```{r}
save(sf.df, file = "data/sf.df.Rdata")
```

```{r}
load(file = "data/sf.df.Rdata")
```





































